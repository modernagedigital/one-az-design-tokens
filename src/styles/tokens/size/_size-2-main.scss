@use "sass:map";
@use "sass:math";
@use "../base/breakpoints.scss";

$fluid-scale: (
  xs: (
    sm: 12,
    md: 16,
    lg: 24,
    xl: 32,
    2xl: 48,
    3xl: 64,
  ),
  md: (
    sm: 14,
    md: 20,
    lg: 28,
    xl: 36,
    2xl: 56,
    3xl: 72,
  ),
  xl: (
    sm: 16,
    md: 24,
    lg: 32,
    xl: 48,
    2xl: 64,
    3xl: 80,
  ),
);

@function fluid-scale($breakpoint, $size) {
  $map: map.get($fluid-scale, $breakpoint);
  @return math.div(map.get($map, $size), 16) + rem;
}

:root {
  // Generate the CSS Variables for size-fluid
  @each $breakpoint, $map in $fluid-scale {
    @if $breakpoint == xs {
      @each $size, $value in $map {
        --size-fluid--#{$size}: #{fluid-scale($breakpoint, $size)};
      }
    } @else {
      @media (min-width: breakpoint($breakpoint)) {
        @each $size, $value in $map {
          --size-fluid--#{$size}: #{fluid-scale($breakpoint, $size)};
        }
      }
    }
  }

  .size-fluid {
    width: var(--size-fluid--3xl);
    aspect-ratio: 1/1;
  }

  --size-pad-x: var(--fluid-scale-md-xl);
  --size-pad-y: var(--fluid-scale-xl-2xl);
  --size-gap: var(--fluid-scale-lg-xl);
  --size-touch-target: var(--fixed-scale-10);

  --border-radius-sm: 0.125rem;
  --border-radius-base: var(--fixed-scale-1);
  --border-radius-md: 0.37rem;
  --border-radius-lg: var(--fixed-scale-2);
  --border-radius-xl: var(--fixed-scale-3);
  --border-radius-2xl: var(--fixed-scale-4);
  --border-radius-3xl: var(--fixed-scale-6);
  --border-radius-3xl: var(--fixed-scale-6);
  --border-radius-full: 9999rem;

  --container-max: 71.25rem; // 1140px
}

@mixin space-y($var) {
  & > :not([hidden]) ~ :not([hidden]) {
    margin-top: #{$var};
  }
}
